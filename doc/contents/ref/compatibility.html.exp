{
    title: 'Compatibility',
    crumbs: [
        { 'Reference Guide': 'index.html'} ,
    ]
}
            <h1>Compatibility</h1>
            <p>Ejscript supports the <a href=
                "http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262</a> standards. As with all
            JavaScript engines, compatibility is close. However, there are some deviations from the standard.
            We are actively working to address these.</p>
            <h2>Binary Compatibility</h2>
            <p>The Ejscript binary APIs are still evolving and are thus subject to change between minor releases. The
            documentation provides a <a href="stability.html">Stability Classification</a> for each API group
            that reflects the stability with regard to backwards compatibility.</p>
            <p>We do <b>not</b> provide a blanket commitment to backward compatibility. Rather, we adopt a more
            surgical approach on an API by API basis.</p>
            <h2>Module File Compatibility</h2>
            <p>The Ejscript module file format is an internal format and not designed or intended to be standardized
            between systems. Developers creating stand-alone modules should distribute their modules in source format
            rather than distributing the module files.</p>
            
            <!--
            <p>A blanket commitment to backwards compatibility for applications makes demands on language in 
                several different areas:</p>
            <ul>
                <li>Language syntax and semantics</li>
                <li>System library API</li>
                <li>Byte code stability</li>
                <li>Module file format</li>
            </ul>
            <p>To provide a valid commitment for backwards compatibility, each of these 4 areas must be mature and
            stable. This requires that the area pass the test of time in the field and be well documented, tested and
            controlled. Currently Ejscript is early in its maturation curve and does not yet have all these
            attributes.</p>
            <p>Ejscript will continue to evolve in the future and as such, early commitments to backward compatibility
            may cement poorly tested design and implementation decisions. Consequently, Ejscript (today) makes no
            commitment for backwards compatibility. We do not make gratuituous changes, but we reserve the right to
            change any part of the product to achieve our goal of making Ejscript the best non-browser implemention of
            ECMAScript.</p>
            -->
