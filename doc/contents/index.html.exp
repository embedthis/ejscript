{ title: "Ejscript Overview", crumbs: [] }

<h1>Embedthis Ejscript&trade;</h1>
<div class="floated">
  <img
    src="images/ejscript-icon-128.png"
    class="ui left floated image"
    alt="ejs"
  />
  <h2>Ejscript is archived and no longer maintained</h2>

  <p>
    Ejscript is an integrated
    <a href="http://en.wikipedia.org/wiki/JavaScript">JavaScript </a>
    environment suitable for education purposeswhen studying compilers, language
    parsers, virtual machines and JavaScript.
  </p>

  <p>
    Ejscript doesn't force you to use async-programming, unless you want to.
    Ejscript gives you freedom to choose the best and most natural design
    paradigm for your application. Ejscript uses an event-driven, non-blocking
    design so it can effortlessly run async applications. Ejscript couples this
    with a scalable multithreaded core so it can also run sync applications that
    need to block without callbacks.
  </p>
</div>
<h2>Overview</h2>
<p>
  Ejscript supports JavaScript ES6 with classes, modules, fat arrow functions,
  simplified object literals. But it goes much further and has an extensive
  system library and catalog of third-party extension modules.
</p>

<p>
  The <b>Ejscript Web Framework</b> provides a complete environment for
  high-performance web applications. It is a Model-View-Controller web framework
  with integrated SQLite database and Object Relational Mapper (ORM). It has a
  library of data-binding Ajax view controls and includes jQuery for client side
  integration.
</p>

<p>
  Ejscript is <b>fast</b>, <b>compact</b> and is optimized for server-side web
  applications. A direct-threaded VM and generational garbage collector provide
  fast runtime execution. A high-level system library of native classes provides
  C speeds for library methods and an in-memory web server module ensures rapid
  response for web requests.
</p>
<a id="benefits"></a>
<h2>Benefits</h2>
<ul>
  <li>
    <p>
      <b>Rapid Development</b>. Ejscript offers the latest in JavaScript
      language and server-side JavaScript features to enable quick development
      of web applications.
    </p>
  </li>
  <li>
    <p>
      <b>Minimal Resource Requirements</b>. Ejscript is fast and very
      <b>compact</b> (from 1MB). It demands minimal resources from your system
      so your system can focus devote vital system resources to running your
      application.
    </p>
  </li>
  <li>
    <p>
      <b>Full ECMAScript Edition 3</b>. Ejscript is not a cut-down portion of
      JavaScript, rather, Ejscript provides a full, uncompromised, ECMAScript
      Edition 3 implementation. It extends upon this core with a set of
      enhancements designed for server-side web applications such as modules and
      classes.
    </p>
  </li>
  <li>
    <b>Security and Reliability.</b> Ejscript is ideal for embedded applications
    where uptime and secure execution is paramount. It includes a secure
    portable runtime to prevent common security flaws.
  </li>
</ul>
<a id="features"></a>
<h2>Features</h2>
<p>
  Ejscript has the features and flexibility to meet the most demanding web and
  embedded application needs. It can run stand-alone as a language interpreter,
  or it can be embedded into an existing application.
</p>
<p>Ejscript has the following features:</p>
<ul>
  <li>
    <p>
      <b>Web Framework</b> The Ejscript web framework enables Ajax based web
      applications with few lines of code. It includes a flexible request
      routing, Model-View-Controller framework, ORM layer, code generator,
      database migrations, integrated caching, a web page templating engine and
      a suite of Ajax view controls.
    </p>
  </li>
  <li>
    <p>
      <b>High Performance Virtual Machines</b>. Ejscript has a direct-threaded
      VM with generational garbage collector. It uses a virtual arena-based
      memory allocator which is specifically designed for applications
      responding to web requests.
    </p>
  </li>
  <li>
    <p>
      <b>Compact Byte Code</b>. Ejscript has an extremely compact, high level
      byte code. Ideal for server-side web applications.
    </p>
  </li>
  <li>
    <p>
      <b>Enhanced Core Language</b>. Ejscript enhances the ECMAScript core with
      powerful a set of features including: classes and modules for scalable
      programming, conditional compilation and an enhanced-language mode to
      detect common JavaScript language issues.
    </p>
  </li>
  <li>
    <p>
      <b>Extensive System Class Library</b>. Ejscript goes well beyond the
      minimal class library available with browser-based JavaScript. Ejscript
      provides classes for Events, Timers, Files, Paths, Streams, Sockets and
      HTTP. There are also significant upgrades for the core system classes:
      Array, Object and String.
    </p>
  </li>
  <li>
    <p>
      <b>Great Tools</b>. Ejscript includes a fast, optimizing compiler,
      symbolic assembler listing generator and documentation generation tool.
    </p>
  </li>
  <li>
    <p>
      <b>Embeddable</b>. Ejscript is easily embedded into existing applications
      and systems. It is highly configurable and supports ROMing of programs and
      XIP.
    </p>
  </li>
  <li>
    <p>
      <b>Portable</b>. Ejscript has clean, modular source code that is
      cross-platform and easy to port to new platforms or CPU architectures.
    </p>
  </li>
</ul>
<p>
  See the Ejscript <a href="users/features.html">Feature List</a> for an
  extended list of capabilities.
</p>

<a id="standards"></a>
<h2>Standards</h2>
<p>
  Ejscript fully supports and complies with the standardized version of
  JavaScript known as ECMAScript Edition 3 (<a
    href="http://www.ecma-international.org/publications/standards/Ecma-262.htm"
    >ECMA-262-3</a
  >). Ejscript also implements the ECMAScript E4X for XML (<a
    href="http://www.ecma-international.org/publications/standards/Ecma-357.htm"
    >ECMA-357</a
  >) specification.
</p>
<p>
  The Ejscript development community is also participating in the various
  JavaScript standards efforts including:
</p>
<ul>
  <li>
    <a href="http://www.ecmascript.org/">ECMAScript Harmony</a> &mdash; The next
    generation JavaScript language standards effort.
  </li>
</ul>
<p>
  Ejscript enhances standard JavaScript with the addition of a comprehensive web
  framework and language extensions such as modules and classes.
</p>

<a id="design"></a>
<h2>Ejscript Design</h2>
<p>
  The goal of Ejscript is to create a standards-based JavaScript environment
  that excels at hosting
  <a href="http://en.wikipedia.org/wiki/Server-side_JavaScript"
    >server-side JavaScript</a
  >
  web applications. Web applications typically require compact and efficient
  memory utilization and modest CPU requirements. For embedded applications,
  this is because of device constraints. For enterprise applications, the
  necessity to scale requires that web frameworks are highly efficient in memory
  use.
</p>
<p>
  However, most existing JavaScript implementations are designed for use inside
  a browser on the PC desktop. They have large memory footprints, typically more
  than 4MB and often larger than 64MB &mdash; not ideal for running server-side
  and hosting web applications or running in embedded applications.
</p>
<p>
  By contrast, Ejscript, requires from 400K of code and has minimal memory
  requirements to execute (from 600K). To do this, Ejscript sheds browser
  baggage and prioritizes design trade-offs toward memory efficiency.
</p>
<a id="problem"></a>
<h3>Why Enhance JavaScript?</h3>
<p>
  JavaScript is now one of the most popular programming languages in the world.
  However, JavaScript was written
  <a href="http://en.wikipedia.org/wiki/JavaScript#History_and_naming"
    >many years ago</a
  >
  during the height of the browser wars. It was written in a hurry and under
  corporate pressure. As a result, the language has some glaring weaknesses that
  impact the security of programs and the programming experience of users
  &mdash; especially when used for server-side JavaScript web applications.
</p>
<p>Some of the more major issues are:</p>
<ul>
  <li>
    JavaScript stores all top-level variables from all source files together in
    one global object.
  </li>
  <li>
    JavaScript fails to provide a scalable module scheme to package and isolate
    program components and ensure names don't conflict.
  </li>
  <li>JavaScript does not provide real block scope</li>
  <li>
    JavaScript allows multiple variable declarations of the same name so
    variable declarations can silently collide.
  </li>
  <li>
    Assignments to undeclared variables in JavaScript functions will often
    create unwanted global variables.
  </li>
</ul>
<p>
  Ejscript corrects these issues with a set of extensions to the JavaScript
  language and environment that make Ejscript ideal for server-side web
  applications.
</p>
<a id="enhancements"></a>
<h3>Ejscript Language Enhancements</h3>
<p>Ejscript adds the following language enhancements:</p>
<ul>
  <li>Block and file scope</li>
  <li>Module and namespace directives</li>
  <li>Let variable declarations</li>
  <li>Variable visibility controls</li>
  <li>Optional type annotations</li>
  <li>Bound methods that capture the <em>this</em> object</li>
  <li>Function rest arguments</li>
  <li>Class, extends, super and interface directives</li>
  <li>
    Extended language library: Http, File I/O, Sockets, Stream I/O, XML,
    Eventing
  </li>
  <li>E4X XML support</li>
  <li>Iterators and Generators</li>
  <li>Automatic type conversion for function arguments</li>
  <li>Extended try / catch syntax</li>
  <li>Cast, is operators</li>
  <li>Reflection</li>
  <li>Use pragmas</li>
  <li>Assertions</li>
  <li>Conditional compilation</li>
</ul>
<p>
  You can choose to take advantage of the enhancements offered by Ejscript for a
  more secure, scalable and pleasant programming experience or you can can use
  it in strict ECMAScript compliant mode and utilize only standard features.
</p>
<a id="history"></a>
<h2>Ejscript History</h2>
<p>
  Early versions of Ejscript have been used in the Embedthis Appweb embedded web
  server for years and is now embedded in millions of devices. The new VM based
  version has also been used in a range of mobile devices to empower
  widget-style applications.
</p>
<a id="licensing"></a>
<h2>Licensing</h2>
<p>
  Ejscript software products are available with either an Open Source or
  <a href="#commercial">Commercial</a> license. Our products are created using
  an Open Source development model where a community of developers contribute
  enhancements and fixes. Products are licensed under the GNU GPL open source
  license and are provided with full source code.
</p>
<p>
  <a href="https://www.embedthis.com/">Embedthis Software</a> has generously
  provided infrastructure, developers and funding to make this possible and is
  also providing commercial support and licenses for Ejscript.
</p>
<a id="commercial"></a>
<h3>Commercial Licenses</h3>
<p>
  Embedthis provides commercial licenses and support. See
  <a href="https://www.embedthis.com">https://www.embedthis.com</a> for details.
</p>
