{
    title: 'Controls',
    crumbs: [
        { 'Web Framework Guide': 'index.html'} ,
    ]
}
            <h1>Ajax View Controls</h1>
            <p>Web applications split their processing between the server and the client. Increasingly, more processing
            is being done at the client to give a better user experience. <a href=
            "http://en.wikipedia.org/wiki/Ajax_(programming)">Ajax</a> programming has risen as one of the more popular
            means of achieving responsive client user interfaces and a wide variety of <a href=
            "http://en.wikipedia.org/wiki/Ajax_framework">Ajax Frameworks</a> have been developed.</p>
            <p>Ajax translates as "Asynchronous JavaScript and XML", but what it typically means is doing background
            HTTP requests to get data and update the user interface without doing a complete browser refresh. This
            gives a more immediate and natural feel to a web application. Ejscript supports Ajax and Ajax frameworks
            via its ViewConnector which provides a plugable interface for Ajax libraries.</p><a id="interface"></a>

            <h2>ViewConnector Interface</h2>
            <p>The ViewConnector interface defines methods for common user interface controls such as: button and
            checkbox, but it also provides high level controls such as chart and table. Application <a href=
            "views.html">Views</a> can use these methods to render UI components with very little code or effort.</p>
            <p>However the ViewConnector is just an interface. It contains no implementation. The actual implementation
            is provided by the Ajax Framework libraries.</p><img src="../images/viewConnector.jpg" alt="" />

            <a id="libraries"></a>
            <h3>Ajax Libraries</h3>
            <p>The purpose of the ViewConnector is to provide a modular way to add Ajax Framework libraries and to give
            you choice which library you use. Individual Ejscript Views can select different libraries for each view
            control in the web pages.</p>
            <p>Each Ajax Framework offers a different set of capabilities and restrictions. However, these differences
            impact mostly on the client side which is outside the scope of the View Connector Interface. The
            ViewConnector adaptors transform the interface for the server-side of each Ajax library to be compatible
            with the View Connector Interface.</p>
            <p>Ejscript currently supports the Ejscript Ajax library and portions of the Google Visualization library.
            Support for other frameworks will be available soon in future releases.</p><a id="dynamic"></a>
            <h3>Dynamic Controls</h3>
            <p>The View Control Interface is designed to support controls that can dynamically retrieve data from
            databases and refresh their contents automatically.</p>
            <p>Here is an example of a table configured to display stock market data in a grid with the current price
            for each stock. The grid will refresh its data every 2 seconds without updating the entire web page.</p>
            <pre class="ui code segment">
&lt;%
    table(Stock.findAll(), {
        refresh: 2,
        click: "edit",
        columns: {
            ticker:         { },
            stockName:      { },
            price:          { render: currency("$$%,d") },
        },
        connector: "google",
        width: "80%",
}) %&gt;
</pre><!-- TODO more on charts and tables
               <h2 >Table Control</h2>
               <h2 >Chart Control</h2>
           -->
            <a id="viewConnector"></a>
            <h2>ViewConnector Methods</h2>
            <p>The ViewConnector interface defines the following methods:</p>
            <table title="methods" class="ui table segment">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>aform</td>
                        <td>Render an async (ajax) form</td>
                    </tr>
                    <tr>
                        <td>alink</td>
                        <td>Render an async (ajax) link</td>
                    </tr>
                    <tr>
                        <td>button</td>
                        <td>Render a form button</td>
                    </tr>
                    <tr>
                        <td>buttonLink</td>
                        <td>Render a link button</td>
                    </tr>
                    <tr>
                        <td>chart</td>
                        <td>Render a graphical chart</td>
                    </tr>
                    <tr>
                        <td>checkbox</td>
                        <td>Render an input checkbox</td>
                    </tr>
                    <tr>
                        <td>extlink</td>
                        <td>Render an external link</td>
                    </tr>
                    <tr>
                        <td>image</td>
                        <td>Render an image</td>
                    </tr>
                    <tr>
                        <td>input</td>
                        <td>Smart input control. Delegates depending on the data type.</td>
                    </tr>
                    <tr>
                        <td>label</td>
                        <td>Render a text label</td>
                    </tr>
                    <tr>
                        <td>link</td>
                        <td>Render an internal link</td>
                    </tr>
                    <tr>
                        <td>list</td>
                        <td>Render a selection list (drop-down)</td>
                    </tr>
                    <tr>
                        <td>mail</td>
                        <td>Render a mail link</td>
                    </tr>
                    <tr>
                        <td>progress</td>
                        <td>Render a progress bar</td>
                    </tr>
                    <tr>
                        <td>radio</td>
                        <td>Render an input radio button</td>
                    </tr>
                    <tr>
                        <td>status</td>
                        <td>Render a status control area</td>
                    </tr>
                    <tr>
                        <td>script</td>
                        <td>Render a script tag</td>
                    </tr>
                    <tr>
                        <td>stylesheet</td>
                        <td>Render a stylesheet tag</td>
                    </tr>
                    <tr>
                        <td>table</td>
                        <td>Render a table</td>
                    </tr>
                    <tr>
                        <td>tabs</td>
                        <td>Render a tab selection control</td>
                    </tr>
                    <tr>
                        <td>text</td>
                        <td>Render an input text field</td>
                    </tr>
                    <tr>
                        <td>textarea</td>
                        <td>Render an input textarea field</td>
                    </tr>
                    <tr>
                        <td>tree</td>
                        <td>Render a tree control</td>
                    </tr>
                </tbody>
            </table>
